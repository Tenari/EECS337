rm -f *.o lex.c yacc.c y.output
gcc -g   -c -o Echo2.o Echo2.c
Echo2.c:100:6: warning: conflicting types for ‘my_putchar’ [enabled by default]
Echo2.c:86:3: note: previous implicit declaration of ‘my_putchar’ was here
gcc Echo2.o -lm -g  -o Echo2
for djz24 start time: Fri Sep  6 10:46:46 2013
token: INT text: int
token: IDENTIFIER text: x
token: '=' text: =
token: CONSTANT text: 2
token: ';' text: ;
token: VOID text: void
token: IDENTIFIER text: b
token: '(' text: (
token: ')' text: )
token: '{' text: {
token: IDENTIFIER text: x
token: '=' text: =
token: '(' text: (
token: IDENTIFIER text: x
token: '+' text: +
token: CONSTANT text: 1
token: ')' text: )
token: ';' text: ;
token: IDENTIFIER text: printf
token: '(' text: (
token: STRING_LITERAL text: "%d\n"
token: ',' text: ,
token: IDENTIFIER text: x
token: ')' text: )
token: ';' text: ;
token: '}' text: }
token: VOID text: void
token: IDENTIFIER text: c
token: '(' text: (
token: ')' text: )
token: '{' text: {
token: INT text: int
token: IDENTIFIER text: x
token: '=' text: =
token: CONSTANT text: 1
token: ';' text: ;
token: IDENTIFIER text: printf
token: '(' text: (
token: STRING_LITERAL text: "%d\n"
token: ',' text: ,
token: '(' text: (
token: IDENTIFIER text: x
token: '+' text: +
token: CONSTANT text: 1
token: ')' text: )
token: ')' text: )
token: ';' text: ;
token: '}' text: }
token: INT text: int
token: IDENTIFIER text: main
token: '(' text: (
token: ')' text: )
token: '{' text: {
token: IDENTIFIER text: b
token: '(' text: (
token: ')' text: )
token: ';' text: ;
token: IDENTIFIER text: c
token: '(' text: (
token: ')' text: )
token: ';' text: ;
token: RETURN text: return
token: CONSTANT text: 0
token: ';' text: ;
token: '}' text: }
